# Generated by Django 3.2.10 on 2022-03-02 12:06

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Automelts',
            fields=[
                ('furnace_no', models.SmallIntegerField(db_column='Furnace_No', primary_key=True, serialize=False)),
                ('auto_mode', models.BooleanField(blank=True, db_column='Auto_mode', null=True)),
                ('melt_type', models.SmallIntegerField(blank=True, db_column='Melt_type', null=True)),
                ('melt_step', models.SmallIntegerField(blank=True, db_column='Melt_step', null=True)),
                ('step_total_time', models.IntegerField(blank=True, db_column='Step_total_time', null=True)),
                ('step_time_remain', models.SmallIntegerField(blank=True, db_column='Step_time_remain', null=True)),
                ('deltat', models.SmallIntegerField(blank=True, db_column='DeltaT', null=True)),
            ],
            options={
                'db_table': 'AutoMelts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Daily_gases_consumption',
            fields=[
                ('id', models.SmallIntegerField(db_column='Furnace_No', primary_key=True, serialize=False)),
                ('data', models.DateField(db_column='Data')),
                ('daily_consumption', models.FloatField(db_column='Daily_consumption', null=True)),
                ('gasname', models.CharField(db_column='GasName', max_length=20)),
            ],
            options={
                'db_table': 'DailyGasesConsumption',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Floattable',
            fields=[
                ('dateandtime', models.DateTimeField(db_column='DateAndTime')),
                ('millitm', models.SmallIntegerField(db_column='Millitm')),
                ('tagindex', models.SmallIntegerField(db_column='TagIndex', primary_key=True, serialize=False)),
                ('val', models.FloatField(db_column='Val')),
                ('status', models.CharField(blank=True, db_column='Status', max_length=1, null=True)),
                ('marker', models.CharField(blank=True, db_column='Marker', max_length=1, null=True)),
            ],
            options={
                'db_table': 'FloatTable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Melts',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('meltno', models.IntegerField(db_column='MeltNo')),
                ('furnace', models.SmallIntegerField(db_column='Furnace')),
                ('total', models.FloatField(blank=True, db_column='Total', null=True)),
                ('pasta', models.FloatField(blank=True, db_column='Pasta', null=True)),
                ('coal', models.FloatField(blank=True, db_column='Coal', null=True)),
                ('soda', models.FloatField(blank=True, db_column='Soda', null=True)),
                ('iron', models.FloatField(blank=True, db_column='Iron', null=True)),
                ('dust', models.FloatField(blank=True, db_column='Dust', null=True)),
                ('oxides', models.FloatField(blank=True, db_column='Oxides', null=True)),
                ('slurry', models.FloatField(blank=True, db_column='Slurry', null=True)),
                ('fraction', models.FloatField(blank=True, db_column='Fraction', null=True)),
                ('pbmat', models.FloatField(blank=True, db_column='PBMat', null=True)),
                ('startmelt', models.DateTimeField(blank=True, db_column='StartMelt', null=True)),
                ('endmelt', models.DateTimeField(blank=True, db_column='EndMelt', null=True)),
            ],
            options={
                'db_table': 'Melts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Meltsteps',
            fields=[
                ('step_id', models.AutoField(db_column='STEP_ID', primary_key=True, serialize=False)),
                ('step_num', models.SmallIntegerField(db_column='STEP_NUM')),
                ('cur_step_time', models.SmallIntegerField(blank=True, db_column='CUR_STEP_TIME', null=True)),
                ('step_name', models.CharField(db_column='STEP_NAME', max_length=20)),
            ],
            options={
                'db_table': 'MeltSteps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Melttypes',
            fields=[
                ('melt_id', models.AutoField(db_column='MELT_ID', primary_key=True, serialize=False)),
                ('melt_num', models.SmallIntegerField(db_column='MELT_NUM')),
                ('melt_furnace', models.SmallIntegerField(db_column='MELT_FURNACE')),
                ('melt_name', models.CharField(db_column='MELT_NAME', max_length=50)),
            ],
            options={
                'db_table': 'MeltTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rarefaction',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('rf_in_furnace', models.FloatField(blank=True, db_column='Rf_in_furnace', null=True)),
                ('rf_in_ciclone_2pech', models.FloatField(blank=True, db_column='Rf_in_ciclone_2pech', null=True)),
                ('timestamp', models.DateTimeField(db_column='TimeStamp')),
            ],
            options={
                'db_table': 'Rarefaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Substeps',
            fields=[
                ('substep_id', models.AutoField(db_column='SUBSTEP_ID', primary_key=True, serialize=False)),
                ('sub_step_num', models.SmallIntegerField(db_column='SUB_STEP_NUM')),
                ('sub_step_time', models.SmallIntegerField(db_column='SUB_STEP_TIME')),
                ('power_sp', models.IntegerField(blank=True, db_column='POWER_SP', null=True)),
                ('rotation_sp', models.IntegerField(blank=True, db_column='ROTATION_SP', null=True)),
                ('hotgate_sp', models.IntegerField(blank=True, db_column='HOTGATE_SP', null=True)),
                ('alpha_sp', models.IntegerField(blank=True, db_column='ALPHA_SP', null=True)),
            ],
            options={
                'db_table': 'SubSteps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tagtable',
            fields=[
                ('tagname', models.CharField(db_column='TagName', max_length=255)),
                ('tagindex', models.SmallIntegerField(db_column='TagIndex', primary_key=True, serialize=False)),
                ('tagtype', models.SmallIntegerField(db_column='TagType')),
                ('tagdatatype', models.SmallIntegerField(blank=True, db_column='TagDataType', null=True)),
            ],
            options={
                'db_table': 'TagTable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutoMeltsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('furnace_no', models.IntegerField(blank=True, null=True)),
                ('auto_mode', models.CharField(blank=True, default='', max_length=7, null=True)),
                ('melt_name', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('step_name', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('step_total_time', models.IntegerField(blank=True, default='', null=True)),
                ('step_time_remain', models.IntegerField(blank=True, default='', null=True)),
                ('deltat', models.FloatField(blank=True, default='', null=True)),
                ('deltat_stp', models.IntegerField(blank=True, default='', null=True)),
            ],
        ),
    ]
